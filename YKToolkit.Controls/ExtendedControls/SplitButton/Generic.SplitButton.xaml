<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:YKToolkit.Controls"
                    xmlns:c="clr-namespace:YKToolkit.Controls.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/YKToolkit.Controls;component/Themes/DefaultColors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <c:BooleanInverseConverter x:Key="BooleanInverseConverter" />

    <Style TargetType="{x:Type local:SplitButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ButtonForegroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ButtonColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="{DynamicResource ButtonBorderColor}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <Button x:Name="PART_SubButton"
                                    Margin="0,0,2,0"
                                    Command="{TemplateBinding Command}"
                                    CommandParameter="{TemplateBinding CommandParameter}"
                                    Cursor="Hand">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource DisabledForegroundColor}" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource DisabledButtonColor}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                                <ContentPresenter IsHitTestVisible="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="4,2,4,2"
                                                  />
                            </Button>
                            <Rectangle Grid.Column="0" Margin="0,2" Width="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Fill="{TemplateBinding BorderBrush}" />
                            <ToggleButton x:Name="PART_MainButton"
                                          Grid.Column="1"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsHitTestVisible="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanInverseConverter}}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>

                                    <Path Grid.Column="1"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Data="M 0,0 8,0 4,5 Z"
                                          Fill="{TemplateBinding Foreground}"
                                          />
                            </ToggleButton>
                            <Popup x:Name="PART_DropDownPopup"
                                   Placement="Bottom"
                                   StaysOpen="False"
                                   IsOpen="{Binding IsChecked, ElementName=PART_MainButton}"
                                   VerticalOffset="4">
                                <Border x:Name="PART_DropDownBorder" BorderThickness="1" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ContentBaseColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush>
                                            <GradientStop Color="{DynamicResource BorderColor}" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <ScrollViewer>
                                        <ContentPresenter ContentSource="DropDownContent" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush>
                                        <GradientStop Color="{DynamicResource ButtonHoverBorderColor}" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush>
                                        <GradientStop Color="{DynamicResource ButtonHoverBorderColor}" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_SubButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_SubButton" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource HoverColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_SubButton" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_SubButton" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource PressedButtonColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SubButton" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource PressedButtonForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_MainButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_MainButton" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource HoverColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_MainButton" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_MainButton" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource PressedButtonColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_MainButton" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource PressedButtonForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_MainButton" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_MainButton" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource CheckedButtonColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_MainButton" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource CheckedButtonForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledButtonColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush>
                                        <GradientStop Color="{DynamicResource DisabledButtonBorderColor}" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>